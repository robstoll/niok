buildscript {
    project.group = 'ch.tutteli.niok'
    project.version = '1.3.4'

    ext {
        // main
        kotlin_version = '1.3.71'

        // test
        atrium_version = '0.10.0'
        tutteli_spek_extensions = '1.1.0'

        // detekt/sonarcloud
        detekt_version = '1.7.4'

        srcAndResourcesFromJvmProject = { Project project ->
            def jvmProject = prefixedProject('jvm')
            project.sourceSets {
                main {
                    kotlin.srcDirs += "${jvmProject.projectDir}/src/main/kotlin"
                    resources.srcDirs += "${jvmProject.projectDir}/src/main/resources"
                }
                test {
                    java.srcDirs += "${jvmProject.projectDir}/src/test/java"
                    kotlin.srcDirs += ["${jvmProject.projectDir}/src/test/kotlin", "${jvmProject.projectDir}/src/test/java"]
                    resources.srcDirs += "${jvmProject.projectDir}/src/test/resources"
                }
            }
        }
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "ch.tutteli:tutteli-gradle-dokka:$gradle.ext.tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-kotlin-module-info:$gradle.ext.tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-kotlin-utils:$gradle.ext.tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-project-utils:$gradle.ext.tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-publish:$gradle.ext.tutteli_plugins_version"
        classpath "ch.tutteli:tutteli-gradle-spek:$gradle.ext.tutteli_plugins_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

apply plugin: "ch.tutteli.project.utils"
apply plugin: 'ch.tutteli.kotlin.utils'
kotlinutils.kotlinVersion = kotlin_version

configurations {
    dependabot
}

dependencies {
    // helps dependabot to recognise versions which it should update
    dependabot "ch.tutteli.atrium:atrium-fluent-en_GB:$atrium_version"
    dependabot "ch.tutteli.spek:tutteli-spek-extensions:$tutteli_spek_extensions"
}

subprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/robstoll/tutteli-jars" }
    }

    apply plugin: 'kotlin'
    apply plugin: 'ch.tutteli.dokka'
    apply plugin: 'ch.tutteli.spek'

    apply plugin: 'ch.tutteli.kotlin.module.info'
    apply plugin: 'ch.tutteli.publish'

    sourceCompatibility = 8
    targetCompatibility = 8

    dependencies {
        compile kotlinStdlib()
        compile kotlinReflect()
    }
}


repositories {
    mavenCentral()
    jcenter()
}
apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    failFast = true
    input = files(subprojects*.collect { it.projectDir })
    config = files("$rootProject.projectDir/gradle/scripts/detekt.yml")
    reports {
        xml.enabled = true
    }
}

/*

Release & deploy a commit
--------------------------------
1. search for X.Y.Z-SNAPSHOT and replace with X.Y.Z
2. update master:
    a) point to the tag
        1) search for `branch=master` and replace it with `branch=vX.Y.Z` (build status in README.md)
        2) search for `tree/master` and replace it with `tree/vX.Y.Z` (so far nowhere)
    b) commit (modified .travis.yml, build.gradle and README.md)
    c) git tag vX.Y.Z
    d) git push origin vX.Y.Z
4. deploy to bintray:
    a) java -version 2>&1 | grep "version \"11" && CI=true ./gradlew clean publishToBintray
    b) Log in to bintray, check that there are 20 artifacts which needs to be published; publish them
    c) synchronise to maven central
5. create release on github

Prepare next dev cycle
-----------------------
1. point to master
   a) search for `tag=vX.Y.Z` and replace it with `branch=master`
   b) search for `tree/vX.Y.Z` and replace it with `tree/master`
2. search for X.Y.Z and replace with X.Y.Z-SNAPSHOT
3. commit & push changes

*/
