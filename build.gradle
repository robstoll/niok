buildscript {
    project.group = 'ch.tutteli.niok'
    project.version ='0.4.0-SNAPSHOT'
    project.description = "API for java.nio.file in a Kotlin idiomatic way"

    // <buildSrcVersions>
    // Generated by ./gradle buildSrcVersions
    // See https://github.com/jmfayard/buildSrcVersions/issues/54
    ext {
        ch_tutteli = '0.29.0'
        gradleLatestVersion = '5.6.1'
        detekt_gradle_plugin = '1.0.1'
        gradleCurrentVersion = '5.4'
        org_jetbrains_kotlin = '1.3.50'
        org_spekframework_spek2 = '2.0.6' // available: '2.0.7'
        tutteli_spek_extensions = '0.4.1' // available: '0.5.0'
        atrium_cc_en_gb_robstoll = '0.8.0'
        de_fayard_buildsrcversions_gradle_plugin = '0.5.0'
    }
    // </buildSrcVersions>


    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$org_jetbrains_kotlin"
        classpath "ch.tutteli:tutteli-gradle-dokka:$ch_tutteli"
        classpath "ch.tutteli:tutteli-gradle-kotlin-module-info:$ch_tutteli"
        classpath "ch.tutteli:tutteli-gradle-kotlin-utils:$ch_tutteli"
        classpath "ch.tutteli:tutteli-gradle-publish:$ch_tutteli"
        classpath "ch.tutteli:tutteli-gradle-spek:$ch_tutteli"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_gradle_plugin"
    }
}
plugins {
    id("de.fayard.buildSrcVersions").version("0.5.0")
}

buildSrcVersions {
    versionsOnlyMode = "GROOVY_EXT"
    versionsOnlyFile = "app/build.gradle"
    rejectedVersionKeywords("alpha", "beta", "rc", "cr", "m", "preview", "eap", "pr2", "pr1")
}

repositories {
    mavenCentral()
    jcenter()
    maven { url  "https://dl.bintray.com/robstoll/tutteli-jars" }
}

apply plugin: 'kotlin'
apply plugin: 'ch.tutteli.dokka'
apply plugin: 'ch.tutteli.spek'

apply plugin: 'ch.tutteli.kotlin.utils'
kotlinutils.kotlinVersion = org_jetbrains_kotlin

apply plugin: 'ch.tutteli.kotlin.module.info'
apply plugin: 'ch.tutteli.publish'

apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    failFast = true
    filters = ".*/resources/.*,.*$rootProject.name/.*/build/.*"
    config = files("$rootProject.projectDir/gradle/scripts/detekt.yml")
    reports {
        xml.enabled = true
    }
}


dependencies {
    compile kotlinStdlib()
    compile kotlinReflect()
    testCompile "ch.tutteli.atrium:atrium-cc-en_GB-robstoll:$atrium_cc_en_gb_robstoll", excludeKotlin
    testCompile "ch.tutteli.spek:tutteli-spek-extensions:$tutteli_spek_extensions"
}

if (JavaVersion.current() >= JavaVersion.VERSION_1_9) {
    java {
        sourceCompatibility = JavaVersion.VERSION_1_9
        targetCompatibility = JavaVersion.VERSION_1_9
    }
}

/*

Release & deploy a commit
--------------------------------
    1. search for X.Y.Z-SNAPSHOT and replace with X.Y.Z
2. update master:
    a) point to the tag
        1) search for `branch=master` and replace it with `branch=vX.Y.Z` (build status and coverage in README.md)
        2) search for `tree/master` and replace it with `tree/vX.Y.Z` (README.md)
    b) commit (modified .travis.yml, build.gradle and README.md)
    c) git tag vX.Y.Z
    d) git push origin vX.Y.Z
4. deploy to bintray:
    a) ./gr publishToBintray
    b) Log in to bintray, check and publish new jars
5. create release on github

Prepare next dev cycle
-----------------------
1. point to master
   a) search for `tag=vX.Y.Z` and replace it with `branch=master`
   b) search for `tree/vX.Y.Z` and replace it with `tree/master`
2. search for X.Y.Z and replace with X.Y.Z-SNAPSHOT
3. commit & push changes

*/
