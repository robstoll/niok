buildscript {
    project.group = 'ch.tutteli.niok'
    project.version ='0.4.0-SNAPSHOT'
    project.description = "API for java.nio.file in a Kotlin idiomatic way"

    ext {
        // project setup
        tutteli_gradle_version = '0.27.3'

        // main
        kotlin_version = '1.3.50'

        // test
        junit_platform_version = '1.2.0'
        atrium_version = '0.8.0'
        tutteli_spek_extensions = '0.4.1'

        // detekt/sonarcloud
        detekt_version = '1.0.0.RC8'
    }

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_platform_version"
        classpath "ch.tutteli:tutteli-gradle-dokka:$tutteli_gradle_version"
        classpath "ch.tutteli:tutteli-gradle-kotlin-module-info:$tutteli_gradle_version"
        classpath "ch.tutteli:tutteli-gradle-kotlin-utils:$tutteli_gradle_version"
        classpath "ch.tutteli:tutteli-gradle-publish:$tutteli_gradle_version"
        classpath "ch.tutteli:tutteli-gradle-spek:$tutteli_gradle_version"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url  "https://dl.bintray.com/robstoll/tutteli-jars" }
}

apply plugin: 'kotlin'
apply plugin: 'ch.tutteli.dokka'
apply plugin: 'ch.tutteli.spek'

apply plugin: 'ch.tutteli.kotlin.utils'
kotlinutils.kotlinVersion = kotlin_version

apply plugin: 'ch.tutteli.kotlin.module.info'
apply plugin: 'ch.tutteli.publish'

apply plugin: "io.gitlab.arturbosch.detekt"
detekt {
    version = detekt_version
    defaultProfile {
        filters = ".*/resources/.*,.*$rootProject.name/.*/build/.*"
        output = "$rootProject.buildDir/detekt"
        config = file("$rootProject.projectDir/gradle/scripts/detekt.yml")
    }
}

dependencies {
    compile kotlinStdlib()
    compile kotlinReflect()
    testCompile "ch.tutteli.atrium:atrium-cc-en_GB-robstoll:$atrium_version", excludeKotlin
    testCompile "ch.tutteli.spek:tutteli-spek-extensions:$tutteli_spek_extensions"
}
/*

Release & deploy a commit
--------------------------------
    1. search for X.Y.Z-SNAPSHOT and replace with X.Y.Z
2. update master:
    a) point to the tag
        1) search for `branch=master` and replace it with `branch=vX.Y.Z` (build status and coverage in README.md)
        2) search for `tree/master` and replace it with `tree/vX.Y.Z` (README.md)
    b) commit (modified .travis.yml, build.gradle and README.md)
    c) git tag vX.Y.Z
    d) git push origin vX.Y.Z
4. deploy to bintray:
    a) ./gr publishToBintray
    b) Log in to bintray, check and publish new jars
5. create release on github

Prepare next dev cycle
-----------------------
1. point to master
   a) search for `tag=vX.Y.Z` and replace it with `branch=master`
   b) search for `tree/vX.Y.Z` and replace it with `tree/master`
2. search for X.Y.Z and replace with X.Y.Z-SNAPSHOT
3. commit & push changes

*/
